{
    "$schema": "http://json-schema.org/draft-07/schema",
    "$id": "https://raw.githubusercontent.com/popgen48/scalepopgen/master/nextflow_schema.json",
    "title": "popgen48/scalepopgen pipeline parameters",
    "description": "scalepopgen is a fully automated nextflow-based pipeline that takes vcf files or plink generated bed files as input and employ a variety of open-source tools to carry out comprehensive population genomic analyses. ",
    "type": "object",
    "definitions": {
        "signature_of_selection_options": {
            "title": "signature of selection options",
            "type": "object",
            "description": "Parameters used to carry out signature of selection analysis",
            "default": "",
            "properties": {
                "min_sample_size": {
                    "type": "integer",
                    "default": 8
                },
                "skip_pop": {
                    "type": "string",
                    "description": "The path to the text file containing population IDs that will be skipped from all the analyses of this section."
                },
                "skip_outgroup": {
                    "type": "boolean",
                    "description": "Setting this to \"false\" will not apply the methods to identify signatures of selection on outgroup samples. Default: True",
                    "default": true
                },
                "selection_plot_yml": {
                    "type": "string",
                    "default": "popgen48-scalepopgen/extra/plots/manhattanplot.yml",
                    "description": "Path to the yml file for interactive manattan plot. Default: ./parameters/plots/manhattplot.yml."
                },
                "pairwise_local_fst": {
                    "type": "boolean",
                    "description": "Whether or not to calculate pairwise fst in windows or for each SNPs for every possible pair of population.Default: false"
                },
                "fst_one_vs_all": {
                    "type": "string"
                },
                "tajimas_d": {
                    "type": "boolean",
                    "description": "Whether to calculate Tajimas'D for each population using vcftools. Default: False"
                },
                "pi_val": {
                    "type": "boolean",
                    "description": "Whether to calculate per-SNP pi values or per-window pi values for each population using vcftools. Default: False"
                },
                "skip_chromwise": {
                    "type": "string"
                },
                "window_size": {
                    "type": "integer",
                    "default": 50000,
                    "description": "Window size for the calculation of all signature of selection analysis. Default: 50000"
                },
                "step_size": {
                    "type": "integer",
                    "default": 50000,
                    "description": "The desired step size between windows for Fst calculation. Default: 50000"
                },
                "perc_threshold": {
                    "type": "number",
                    "default": 0.01
                },
                "est_anc_alleles": {
                    "type": "string"
                },
                "anc_alleles_map": {
                    "type": "string"
                },
                "sweepfinder2": {
                    "type": "string"
                },
                "sweepfinder2_model": {
                    "type": "string",
                    "default": "l"
                },
                "grid_space": {
                    "type": "integer",
                    "default": 50000,
                    "description": "The spacing in number of nucleotides between grid points, option \"g\" in SweepFinder2. Default: 50000."
                },
                "grid_points": {
                    "type": "integer",
                    "description": "The number of points equally spaced across the genome, option \"G\" in SweepFinder2.",
                    "default": -9
                },
                "recomb_map": {
                    "type": "string"
                },
                "ihs": {
                    "type": "boolean",
                    "default": true,
                    "description": "Whether or not to calculate iHS using selscan. Default: True"
                }
            }
        },
        "phasing_options": {
            "title": "phasing options",
            "type": "object",
            "description": "Parameters used to carry out genotype phasing",
            "default": "",
            "properties": {
                "skip_phasing": {
                    "type": "boolean",
                    "description": "Setting this to false will skip phasing the data for the analyses with selscan."
                },
                "phasing_panel": {
                    "type": "string"
                },
                "phasing_map": {
                    "type": "string"
                },
                "beagle5": {
                    "type": "string"
                },
                "burnin": {
                    "type": "integer",
                    "default": 6,
                    "description": "The maximum number of burnin iterations, option \"burnin\" in Beagle. Default: 6"
                },
                "iterations": {
                    "type": "integer",
                    "default": 12,
                    "description": "The number of iterations, option \"iterations\" in Beagle. Default: 12"
                },
                "ne": {
                    "type": "integer",
                    "default": 1000000,
                    "description": "The effective population size, option \"ne\" in Beagle. Default: 1000000"
                },
                "impute": {
                    "type": "boolean",
                    "description": "An option to impute the missing genotypes . Default: False"
                }
            }
        },
        "treemix_options": {
            "title": "treemix options",
            "type": "object",
            "description": "Parameters used to carry out treemix analysis",
            "default": "",
            "properties": {
                "treemix": {
                    "type": "boolean",
                    "description": "Whether or not to run treemix analyis. Default = False"
                },
                "k_snps": {
                    "type": "integer",
                    "default": 500,
                    "description": "Number of block of snps in treemix analysis. Default = 500"
                },
                "treemix_args": {
                    "type": "string"
                },
                "n_bootstrap": {
                    "type": "integer",
                    "default": 5,
                    "description": "Number of bootstrapping to run for treemix analyis (without migration edge). Default = 5"
                },
                "set_random_seed": {
                    "type": "boolean",
                    "default": true
                },
                "n_mig": {
                    "type": "integer",
                    "default": 4,
                    "description": "Total number of migration edges. Default = 4"
                },
                "n_iter": {
                    "type": "integer",
                    "default": 3,
                    "description": "Number of iterations to be carried out with each value of \"m\". Default = 3"
                },
                "rand_k_snps": {
                    "type": "boolean",
                    "default": true
                }
            }
        },
        "genetic_structure_options": {
            "title": "genetic structure options",
            "type": "object",
            "description": "Parameters used to apply genetic structure analysis",
            "default": "",
            "properties": {
                "genetic_structure": {
                    "type": "boolean",
                    "description": "Setting this to \"false\" will skip processing this entire module, meaning all the following options will be disabled. Default: False."
                },
                "rem_indi_structure": {
                    "type": "string",
                    "format": "file-path",
                    "pattern": "^\\S+\\.map$",
                    "description": "Path to the file containing list of individuals to be removed before running PCA and/or admixture. Note that this file should contain two columns: first column as population_id and second column as sample id to be removed."
                },
                "ld_filt": {
                    "type": "boolean",
                    "description": "Whether or not to apply ld-based pruning of the dataset before running PCA or/and admixture analysis. Default: False."
                },
                "ld_window_size": {
                    "type": "string",
                    "default": "50",
                    "description": "Window size for LD calculation (as implemented in plink). Default: 50"
                },
                "ld_step_size": {
                    "type": "string",
                    "default": "10",
                    "description": "Step size for LD calculation (as implemented in plink). Default: 10"
                },
                "r2_threshold": {
                    "type": "string",
                    "default": "0.1",
                    "description": "r2 value of a SNP pair above which one of the SNPs will be discarded. Default: 0.1"
                },
                "smartpca": {
                    "type": "boolean",
                    "default": true,
                    "description": "Run PCA using the method implemented in smartpca tool of eigensoft. Default: True"
                },
                "smartpca_param": {
                    "type": "string",
                    "description": "Path to the file containing additional/optional parameters to apply smartpca. To see the list of these parameters:https://github.com/chrchang/eigensoft/blob/master/POPGEN/README."
                },
                "pca_plot_yml": {
                    "type": "string",
                    "default": "popgen48-scalepopgen/extra/plots/pca.yml",
                    "description": "Path to the yaml file containing the paramterers to plot interactive PCA results. Default:\"./parameters/plots/pca_params.yml\"."
                },
                "marker_map": {
                    "type": "string",
                    "description": "Path to the file containing first column as population id and second column as marker shape. Available markers shape are listed in \"./extra/markershapes.txt\" . If no such file is provided, random marker shapes will be selected."
                },
                "chrom_map": {
                    "type": "string"
                },
                "admixture": {
                    "type": "boolean",
                    "description": "Run admixture analysis. Default: False"
                },
                "start_k": {
                    "type": "integer",
                    "default": 2,
                    "description": "Starting range of \"k\" value to run admixture analysis. Default: 2"
                },
                "end_k": {
                    "type": "integer",
                    "default": 21,
                    "description": "Ending range of \"k\" value to run admixture analysis. Default: 40"
                },
                "admixture_args": {
                    "type": "string",
                    "default": "--cv=5"
                },
                "admixture_colors": {
                    "type": "string",
                    "default": "popgen48-scalepopgen/extra/hexcolorcodes.txt"
                },
                "admixture_plot_yml": {
                    "type": "string",
                    "default": "popgen48-scalepopgen/extra/plots/admixture.yml",
                    "description": "Path to the yaml file containing the parameters of plotting interactive Q matrix of optimal value of \"K\". Default: \"./parameters/plots/admixture.yml"
                },
                "pairwise_global_fst": {
                    "type": "string"
                },
                "fst_plot_yml": {
                    "type": "string",
                    "default": "popgen48-scalepopgen/extra/plots/fst_nj.yml",
                    "description": "Path to the yaml file containing the paramterers to plot interactive fst-based NJ tree. Default:\"./parameters/plots/fst_nj.yml\""
                },
                "ibs_dist": {
                    "type": "string"
                },
                "ibs_plot_yml": {
                    "type": "string",
                    "default": "popgen48-scalepopgen/extra/plots/ibs_nj.yml",
                    "description": "Path to the yaml file containing the paramterers to plot interactive ibs distance-based NJ tree. Default:\"./parameters/plots/ibs_nj.yml\""
                },
                "admixture_plot_pop_order": {
                    "type": "string"
                }
            }
        },
        "filtering_options": {
            "title": "filtering options",
            "type": "object",
            "description": "Parameters used to filter SNPs and samples from vcf or plink-bed files.",
            "default": "",
            "fa_icon": "fas fa-filter",
            "properties": {
                "rem_indi": {
                    "type": "string",
                    "description": "Path to the file containing the list of custom individuals to be removed from all analyses. This file consists of two columns, first column as corresponding population id and second column as individual id."
                },
                "mind": {
                    "type": "number",
                    "description": "Samples with missing genotypes greater than this will be removed. Setting this to 0 will disable this parameter.",
                    "default": 0,
                    "minimum": 0,
                    "maximum": 1
                },
                "king_cutoff": {
                    "type": "number",
                    "description": "King relationship coefficient value above which the pairs of individuals are considered to be related and based on these pairwise values, plink2 will output the unrelated samples. Setting this to 0 will skip this parameter.",
                    "default": 0,
                    "minimum": 0,
                    "maximum": 1
                },
                "apply_indi_filters": {
                    "type": "boolean",
                    "description": "Whether or not to perform sample filtering. Note that setting this to false overrides all parameters associated with sample filtering. In other words, sample filtering will not be carried out irrespective of arguments set for --king_cutoff, --rem_indi or --mind."
                },
                "rem_snps": {
                    "type": "string",
                    "description": "Path to the file containing SNP ids to be removed in case of plink-bed files. In case of vcf file, this file should contain two columns: first column as chromsome_id and second column as positions to be removed.",
                    "pattern": "^\\S+\\.map$",
                    "format": "file-path"
                },
                "apply_snp_filters": {
                    "type": "boolean",
                    "description": "Setting this to false overrides all other sites-filtering parameters, i.e. sites-filtering will not be carried out irrespective of any parameters set for --remove_snps,  --maf, --min_meanDP, --max_meanDP, --hwe, --max_missing and --minQ. Note that, depending on the input files, these parameters may or may not be applied. For example, depth-related information and SNP quality information are not available (of course) for plink bed files and therefore, these parameters will be ignored in that case. However, parameters like max_missing, hwe and maf are applied to vcf as well as to plink-bed files."
                },
                "maf": {
                    "type": "number",
                    "default": -9,
                    "description": "Sites with minor allele frequencies less than this will be filtered, if set to any value < 0, this filter will be ignored."
                },
                "min_meanDP": {
                    "type": "number",
                    "default": -9,
                    "description": "Sites with average depth (across the samples) less than this will be filtered out, set to any value < 0, this filter will be ignored."
                },
                "max_meanDP": {
                    "type": "number",
                    "default": -9,
                    "description": "Sites with average depth (across the samples) greater than this will be filtered out, set to any value < 0, this filter will be ignored."
                },
                "hwe": {
                    "type": "number",
                    "default": -9,
                    "description": "Sites with p-value (hwe) less than this will be filtered out, set to any value < 0, this filter will be ignored."
                },
                "max_missing": {
                    "type": "number",
                    "default": -9,
                    "description": "Sites with genotypes missing more than this proportion of samples will be filtered out, set to any value < 0, this filter will be ignored."
                },
                "minQ": {
                    "type": "integer",
                    "default": -9,
                    "description": "Sites with SNP quality less than this will be filtered out, set to any value < 0, this filter will be ignored."
                },
                "indiv_summary": {
                    "type": "boolean",
                    "description": "Calculate sample-based summary statistics from vcf files; calculated only after applying individual- and site-based filtering."
                }
            }
        },
        "general_options": {
            "title": "General options",
            "type": "object",
            "fa_icon": "fas fa-terminal",
            "description": "Define where the pipeline should find input data and save output data.",
            "required": ["input", "outdir"],
            "properties": {
                "input": {
                    "type": "string",
                    "format": "file-path",
                    "exists": true,
                    "mimetype": "text/csv",
                    "pattern": "^\\S+\\.csv$",
                    "description": "Path to comma-separated file containing information about the samples in the experiment.",
                    "help_text": "You will need to create a design file with information about the samples in your experiment before running the pipeline. Use this parameter to specify its location. It has to be a comma-separated file with 3 columns, and a header row.",
                    "fa_icon": "fas fa-file-csv"
                },
                "outdir": {
                    "type": "string",
                    "format": "directory-path",
                    "description": "The output directory where the results will be saved. You have to use absolute paths to storage on Cloud infrastructure.",
                    "fa_icon": "fas fa-folder-open"
                },
                "email": {
                    "type": "string",
                    "description": "Email address for completion summary.",
                    "fa_icon": "fas fa-envelope",
                    "help_text": "Set this parameter to your e-mail address to get a summary e-mail with details of the run sent to you when the workflow exits. If set in your user config file (`~/.nextflow/config`) then you don't need to specify this on the command line for every run.",
                    "pattern": "^([a-zA-Z0-9_\\-\\.]+)@([a-zA-Z0-9_\\-\\.]+)\\.([a-zA-Z]{2,5})$"
                },
                "multiqc_title": {
                    "type": "string",
                    "description": "MultiQC report title. Printed as page header, used for filename if not otherwise specified.",
                    "fa_icon": "fas fa-file-signature"
                },
                "sample_map": {
                    "type": "string",
                    "description": "Path to the sample map file (for example, see: ./test_files/sample.map), format: first column as sample id and second column as population id. This is a REQUIRED argument only if the input is \".csv\". Note that this file must end with the suffix \".map\".",
                    "pattern": "^\\S+\\.map$",
                    "format": "file-path",
                    "fa_icon": "fas fa-file-alt"
                },
                "color_map": {
                    "type": "string",
                    "description": "Path to the file containing population name as first column and color in hex codes as second column (for example, see:./test_files/pop_color.txt\"). If not provided, random colors will be chosen to represent each population, and this pop-color combination will be kept consistent across the plotting of the results of various analyses.",
                    "pattern": "^\\S+\\.map$",
                    "format": "file-path",
                    "fa_icon": "fas fa-file-alt"
                },
                "outprefix": {
                    "type": "string",
                    "description": "Prefix to be applied to all the outgroups produced by the workflow.",
                    "default": "scalepopgen"
                },
                "allow_extra_chrom": {
                    "type": "boolean",
                    "description": "Set this argument to \"true\" if the chromosome id contains string."
                },
                "max_chrom": {
                    "type": "number",
                    "description": "Maximum chromosomes to be considered for the analyses. Note that the workflow only consider the autosomes.",
                    "default": 29
                },
                "chrom_length_map": {
                    "type": "string",
                    "description": "If the inputs are plink binary files, map file is needed to set the chromosome id and its respective size in the vcf header."
                },
                "fasta": {
                    "type": "string",
                    "description": "If the inputs are plink binary files, fasta file is needed to set the reference allele in the converted vcf files. If not provided, the major allele will be set as the reference allele for all positions for all analyses."
                },
                "outgroup": {
                    "type": "string",
                    "description": "The population id to be used as an outgroup, this will be used in the following analyses:                              1). treemix --> as a root in ML phylogenetic tree                              2). Fst-based NJ clustering --> as a root                               3). selection analysis --> to determine the ancestral and derived alleles                              For more details, read the online documentation."
                }
            }
        },
        "institutional_config_options": {
            "title": "Institutional config options",
            "type": "object",
            "fa_icon": "fas fa-university",
            "description": "Parameters used to describe centralised config profiles. These should not be edited.",
            "help_text": "The centralised nf-core configuration profiles use a handful of pipeline parameters to describe themselves. This information is then printed to the Nextflow log when you run a pipeline. You should not need to change these values when you run a pipeline.",
            "properties": {
                "config_profile_name": {
                    "type": "string",
                    "description": "Institutional config name.",
                    "hidden": true,
                    "fa_icon": "fas fa-users-cog"
                },
                "config_profile_description": {
                    "type": "string",
                    "description": "Institutional config description.",
                    "hidden": true,
                    "fa_icon": "fas fa-users-cog"
                }
            }
        },
        "max_job_request_options": {
            "title": "Max job request options",
            "type": "object",
            "fa_icon": "fab fa-acquisitions-incorporated",
            "description": "Set the top limit for requested resources for any single job.",
            "help_text": "If you are running on a smaller system, a pipeline step requesting more resources than are available may cause the Nextflow to stop the run with an error. These options allow you to cap the maximum resources requested by any single job so that the pipeline will run on your system.\n\nNote that you can not _increase_ the resources requested by any job using these options. For that you will need your own configuration file. See [the nf-core website](https://nf-co.re/usage/configuration) for details.",
            "properties": {
                "max_cpus": {
                    "type": "integer",
                    "description": "Maximum number of CPUs that can be requested for any single job.",
                    "default": 16,
                    "fa_icon": "fas fa-microchip",
                    "hidden": true,
                    "help_text": "Use to set an upper-limit for the CPU requirement for each process. Should be an integer e.g. `--max_cpus 1`"
                },
                "max_memory": {
                    "type": "string",
                    "description": "Maximum amount of memory that can be requested for any single job.",
                    "default": "128.GB",
                    "fa_icon": "fas fa-memory",
                    "pattern": "^\\d+(\\.\\d+)?\\.?\\s*(K|M|G|T)?B$",
                    "hidden": true,
                    "help_text": "Use to set an upper-limit for the memory requirement for each process. Should be a string in the format integer-unit e.g. `--max_memory '8.GB'`"
                },
                "max_time": {
                    "type": "string",
                    "description": "Maximum amount of time that can be requested for any single job.",
                    "default": "240.h",
                    "fa_icon": "far fa-clock",
                    "pattern": "^(\\d+\\.?\\s*(s|m|h|d|day)\\s*)+$",
                    "hidden": true,
                    "help_text": "Use to set an upper-limit for the time requirement for each process. Should be a string in the format integer-unit e.g. `--max_time '2.h'`"
                }
            }
        },
        "generic_options": {
            "title": "Generic options",
            "type": "object",
            "fa_icon": "fas fa-file-import",
            "description": "Less common options for the pipeline, typically set in a config file.",
            "help_text": "These options are common to all nf-core pipelines and allow you to customise some of the core preferences for how the pipeline runs.\n\nTypically these options would be set in a Nextflow config file loaded for all pipeline runs, such as `~/.nextflow/config`.",
            "properties": {
                "help": {
                    "type": "boolean",
                    "description": "Display help text.",
                    "fa_icon": "fas fa-question-circle",
                    "hidden": true
                },
                "version": {
                    "type": "boolean",
                    "description": "Display version and exit.",
                    "fa_icon": "fas fa-question-circle",
                    "hidden": true
                },
                "publish_dir_mode": {
                    "type": "string",
                    "default": "copy",
                    "description": "Method used to save pipeline results to output directory.",
                    "help_text": "The Nextflow `publishDir` option specifies which intermediate files should be saved to the output directory. This option tells the pipeline what method should be used to move these files. See [Nextflow docs](https://www.nextflow.io/docs/latest/process.html#publishdir) for details.",
                    "fa_icon": "fas fa-copy",
                    "enum": ["symlink", "rellink", "link", "copy", "copyNoFollow", "move"],
                    "hidden": true
                },
                "email_on_fail": {
                    "type": "string",
                    "description": "Email address for completion summary, only when pipeline fails.",
                    "fa_icon": "fas fa-exclamation-triangle",
                    "pattern": "^([a-zA-Z0-9_\\-\\.]+)@([a-zA-Z0-9_\\-\\.]+)\\.([a-zA-Z]{2,5})$",
                    "help_text": "An email address to send a summary email to when the pipeline is completed - ONLY sent if the pipeline does not exit successfully.",
                    "hidden": true
                },
                "plaintext_email": {
                    "type": "boolean",
                    "description": "Send plain-text email instead of HTML.",
                    "fa_icon": "fas fa-remove-format",
                    "hidden": true
                },
                "max_multiqc_email_size": {
                    "type": "string",
                    "description": "File size limit when attaching MultiQC reports to summary emails.",
                    "pattern": "^\\d+(\\.\\d+)?\\.?\\s*(K|M|G|T)?B$",
                    "default": "25.MB",
                    "fa_icon": "fas fa-file-upload",
                    "hidden": true
                },
                "monochrome_logs": {
                    "type": "boolean",
                    "description": "Do not use coloured log outputs.",
                    "fa_icon": "fas fa-palette",
                    "hidden": true
                },
                "hook_url": {
                    "type": "string",
                    "description": "Incoming hook URL for messaging service.",
                    "fa_icon": "fas fa-people-group",
                    "help_text": "Incoming hook URL for messaging service. Currently, MS Teams and Slack are supported.",
                    "hidden": true
                },
                "multiqc_config": {
                    "type": "string",
                    "format": "file-path",
                    "description": "Custom config file to supply to MultiQC.",
                    "fa_icon": "fas fa-cog",
                    "hidden": true
                },
                "multiqc_logo": {
                    "type": "string",
                    "description": "Custom logo file to supply to MultiQC. File name must also be set in the MultiQC config file.",
                    "fa_icon": "fas fa-image",
                    "hidden": true
                },
                "multiqc_methods_description": {
                    "type": "string",
                    "description": "Custom MultiQC yaml file containing HTML including a methods description.",
                    "fa_icon": "fas fa-cog"
                },
                "validate_params": {
                    "type": "boolean",
                    "description": "Boolean whether to validate parameters against the schema at runtime.",
                    "default": true,
                    "fa_icon": "fas fa-check-square",
                    "hidden": true
                },
                "validationShowHiddenParams": {
                    "type": "boolean",
                    "fa_icon": "far fa-eye-slash",
                    "description": "Show all params when using `--help`.",
                    "hidden": true,
                    "help_text": "By default, parameters set as _hidden_ in the schema are not shown on the command line when a user runs with `--help`. Specifying this option will tell the pipeline to show all parameters."
                },
                "validationFailUnrecognisedParams": {
                    "type": "boolean",
                    "fa_icon": "far fa-check-circle",
                    "description": "Validation of parameters fails when an unrecognised parameter is found.",
                    "hidden": true,
                    "help_text": "By default, when an unrecognised parameter is found, it returns a warinig."
                },
                "validationLenientMode": {
                    "type": "boolean",
                    "fa_icon": "far fa-check-circle",
                    "description": "Validation of parameters in lenient more.",
                    "hidden": true,
                    "help_text": "Allows string values that are parseable as numbers or booleans. For further information see [JSONSchema docs](https://github.com/everit-org/json-schema#lenient-mode)."
                }
            }
        }
    },
    "allOf": [
        {
            "$ref": "#/definitions/signature_of_selection_options"
        },
        {
            "$ref": "#/definitions/phasing_options"
        },
        {
            "$ref": "#/definitions/treemix_options"
        },
        {
            "$ref": "#/definitions/genetic_structure_options"
        },
        {
            "$ref": "#/definitions/filtering_options"
        },
        {
            "$ref": "#/definitions/general_options"
        },
        {
            "$ref": "#/definitions/institutional_config_options"
        },
        {
            "$ref": "#/definitions/max_job_request_options"
        },
        {
            "$ref": "#/definitions/generic_options"
        }
    ],
    "properties": {
        "xpehh": {
            "type": "string"
        }
    }
}
